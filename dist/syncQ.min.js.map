{"version":3,"sources":["webpack://syncQ/webpack/universalModuleDefinition","webpack://syncQ/webpack/bootstrap","webpack://syncQ/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","queue","active","add","item","responseType","maxRetries","priority","unshift","push","debug","debugData","length","JSON","stringify","execute","async","shift","response","fetch","url","returnObj","result","content","json","text","header","headers","forEach","success","handleResponse","err","retryCount","retry","fail","handleError","remove","clearAll","console","log","clearByName","filter"],"mappings":"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","file":"syncQ.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"syncQ\"] = factory();\n\telse\n\t\troot[\"syncQ\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @Author JC Durbin\n * @License Licensed under the MIT license\n * <LICENSE-MIT or http://opensource.org/licenses/MIT>\n * This file may not be copied, modified, or distributed\n * except according to those terms.\n *\n * syncFetch creates an array of async fetch() requests and manages them as a syncronous queue\n * For a situation where you need syncronous reqeusts but still want the yummy goodness of promises\n */\n\nmodule.exports = () => {\n  \"use strict\";\n\n  let queue = [];\n  let active = false;\n\n  /**\n   * Add items to the queue\n   * @param {object}      item\n   *  @param {string}           item.url - The url of the request\n   *  @param {function}         item.success - the callback functon on succesful request\n   *  @param {function}         item.fail - the callback function on failed request\n   *\n   *  Optional Params\n   *  @param {'json' | 'text'}  [item.responseType='json'] - how to parse the reponse\n   *  @param {bool}             [item.header=false] - Get headers from request and add to reponse as \"header\" property\n   *  @param {array}            [item.headers = []] - List of strings of headers to look for\n   *  @param {bool}             [item.retry=false] - Retry item if request fails\n   *  @param {integer}          [item.maxRetries=3] - Number of times to retryRetry item if request fails\n   *  @param {string}           [item.name] - Name of item.  ALows items to be grouped in queue and removed\n   *  @param {bool}             [item.priority] - If true item is added to top of queue   *\n   *  @param {object}           [item.data] - The data to be sent   *\n   *  @param {bool}             [item.debug] - Send debug data\n   *  @param {function}         [item.debugData] - the callback to send debug information\n   */\n\n  const add = (item) => {\n    //set defaults\n    item.responseType = item.responseType || \"json\";\n    item.maxRetries = item.maxRetries || 3;\n\n    if (item.priority) {\n      queue.unshift(item);\n    } else {\n      queue.push(item);\n    }\n\n    if (item.debug)\n      item.debugData(\n        `Queue length: ${queue.length} | Item added: ${JSON.stringify(item)}`\n      );\n\n    if (!active) execute();\n  };\n\n  const remove = () => {};\n\n  /**\n   * Clears all items in queue and stops executing\n   */\n  function clearAll() {\n    active = false;\n    queue.length = 0;\n    console.log(\"QUEUE\", queue.length);\n  }\n\n  /**\n   * Clear all items in queue with name == name\n   *\n   * @param {string} name - THe name of the item.name to filter and remvoe from queue\n   */\n  const clearByName = (name) => {\n    queue = queue.filter(function (item) {\n      if (item.name) return item.name == name;\n    });\n  };\n\n  const handleError = ({ item, err }) => {\n    if (item.debug)\n      item.debugData(`Error - request failed: ${err} | Item: ${item}`);\n\n    if (!item.retryCount) item.retryCount = 0;\n\n    if (item.retry && item.retryCount < item.maxRetries) {\n      item.retryCount++;\n\n      if (item.debug)\n        item.debugData(\n          `Retry: ${item.retryCount} of ${item.maxRetries} | Item: ${item}`\n        );\n\n      add(item);\n    } else {\n      item.fail(err);\n\n      if (item.debug)\n        item.debugData(`Max retries reached | Item: ${JSON.stringify(item)}`);\n    }\n\n    execute();\n  };\n\n  const handleResponse = async ({ item, response }) => {\n    let returnObj = {\n      result: response,\n    };\n\n    item.responseType === \"json\"\n      ? (returnObj.content = await response.json())\n      : (returnObj.content = await response.text());\n\n    if (item.header) {\n      let headers = [];\n      item.headers.forEach(async (header) => {\n        headers.push({ [header]: await response.headers.get(header) });\n      });\n\n      returnObj.headers = headers;\n    }\n\n    item.success(returnObj);\n    execute();\n  };\n\n  /**\n   * Executes the fetch.  If the fetch has retry selected then will retry unti limit reached.  Returns results to callbacks\n   */\n  const execute = async () => {\n    if (queue.length === 0) {\n      active = false;\n      return;\n    }\n\n    active = true;\n    let item = queue.shift();\n\n    try {\n      const response = await fetch(item.url, {});\n      if (!response) throw \"Null Return\";\n\n      handleResponse({ item, response });\n    } catch (err) {\n      handleError({ item, err });\n    }\n  };\n\n  return {\n    queue,\n    add,\n    remove,\n    clearAll,\n    clearByName,\n  };\n};\n"],"sourceRoot":""}